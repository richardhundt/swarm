class HTTPTypes
  local types = {
      appcache = {'text/cache-manifest'},
      atom     = {'application/atom+xml'},
      bin      = {'application/octet-stream'},
      css      = {'text/css'},
      gif      = {'image/gif'},
      gz       = {'application/x-gzip'},
      htm      = {'text/html'},
      html     = {'text/html;charset=UTF-8'},
      ico      = {'image/x-icon'},
      jpeg     = {'image/jpeg'},
      jpg      = {'image/jpeg'},
      js       = {'application/javascript'},
      json     = {'application/json'},
      mp3      = {'audio/mpeg'},
      mp4      = {'video/mp4'},
      ogg      = {'audio/ogg'},
      ogv      = {'video/ogg'},
      pdf      = {'application/pdf'},
      png      = {'image/png'},
      rss      = {'application/rss+xml'},
      svg      = {'image/svg+xml'},
      txt      = {'text/plain;charset=UTF-8'},
      webm     = {'video/webm'},
      woff     = {'application/font-woff'},
      xml      = {'application/xml', 'text/xml'},
      zip      = {'application/zip'}
   }

   self()
      self.types = { } as { __index = types }
   end

   local accept_patt = /
      list <- %s* {| <type> (',' %s* <type>)* |}
      type <- {|
         {:type: {[^,; ]+} :}
         {:qual: %s* ';' %s* 'q' %s* '=' %s* { %d+( '.' %d+)? } :}?
      |}
   /
   detect(accept, prioritize)
      list = accept_patt.match(accept)
      if prioritize then
         Table::sort list, (a, b) =>
            if a.qual and b.qual then
               return a.qual < b.qual
            end
            return true
         end
      end
      for i=1, #list do
         list[i] = list[i].type
      end
      return list
   end

   guess(ext, ...)
      if select('#', ...) > 0 then
         self.types[ext] = ...
      end
      return self.types[ext]
   end
end


